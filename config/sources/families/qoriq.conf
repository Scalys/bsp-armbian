CPUMIN=392000
CPUMAX=996000
GOVERNOR=interactive
SERIALCON=ttyS0
ARCH=arm64
UBOOT_TARGET_MAP=";spi;u-boot-with-spl-pbl.bin"

if [[ $BOARD = "trustbox-xl" ]]; then
	UBOOT_TARGET_MAP=";sd;flash-image.bin bl2_sd.pbl fip.bin"
fi

if [[ $SECUREBOOT = yes ]]; then
	UBOOT_TARGET_MAP=";spi;u-boot-dtb.bin spl/u-boot-spl.bin u-boot-with-spl-pbl.bin"
	BOOTDELAY=-2
fi

if [[ $USE_FSLC_KERNEL == yes ]]; then 
	KERNELSOURCE='https://github.com/Scalys/linux-fslc.git'
	KERNELBRANCH='branch:trustbox-5.4.y'
	KERNELDIR='linux-qoriq-fslc'
else
	KERNELSOURCE='https://github.com/Scalys/linux-qoriq.git'
	KERNELDIR='linux-qoriq'

	case $BRANCH in
		legacy)
			KERNELBRANCH='branch:trustbox-2012'
			;;
		*)
			KERNELBRANCH='branch:trustbox-2108'
			;;
	esac
fi

BOOTSOURCE='https://github.com/Scalys/u-boot-qoriq.git'
BOOTBRANCH='branch:trustbox-2012'
BOOTDIR='u-boot-qoriq'

if [[ $BOARD == "trustbox-xl" ]]; then
  ATFSOURCE='https://github.com/Scalys/atf-qoriq.git'
  ATFDIR='arm-trusted-firmware-qoriq'
  ATFBRANCH='branch:trustbox-2012'
fi

# ATF_COMPILE='no'

RCWSOURCE='https://github.com/Scalys/rcw.git'
RCWBRANCH='branch:trustbox-2012'
RCWDIR='rcw-qoriq'

OPTEESOURCE='https://github.com/ms-iot/optee_os.git'
OPTEEBRANCH='branch:ms-iot-openenclave-3.6.0'
OPTEEDIR='optee_os-qoriq'

FMUCODESOURCE='https://github.com/NXP/qoriq-fm-ucode'
FMUCODEBRANCH='branch:LSDK-21.08'
FMUCODEDIR='fm-ucode'


BOOTSCRIPT="boot-${BOARD}.cmd:${BOARD}_boot.cmd"

if [[ $BOARD == "trustbox-xl" ]]; then
	BOOTSCRIPT="boot-${BOARD}.cmd:trustbox_xl_boot.cmd"
fi


write_uboot_platform() {
	if [[ $BOARD = "trustbox-xl" ]]; then
		dd if=$1/flash-image.bin of=$2 bs=512 seek=8 status=noxfer > /dev/null 2>&1
	fi

	true
}


uboot_custom_postprocess() {
	if [[ $BOARD != "trustbox-xl" ]]; then
		return 0;
	fi

	(fetch_from_repo "$RCWSOURCE" "$RCWDIR" "$RCWBRANCH" "yes")
	(fetch_from_repo "$OPTEESOURCE" "$OPTEEDIR" "$OPTEEBRANCH" "yes")
	(fetch_from_repo "$FMUCODESOURCE" "$FMUCODEDIR" "$FMUCODEBRANCH" "yes")


	local atfdir="$SRC/cache/sources/$ATFDIR/${ATFBRANCH##*:}"
	local ubootdir="$SRC/cache/sources/$BOOTDIR/${BOOTBRANCH##*:}"
	local rcwdir="$SRC/cache/sources/$RCWDIR/${RCWBRANCH##*:}"
	local teedir="$SRC/cache/sources/$OPTEEDIR/${OPTEEBRANCH##*:}"
	local fmucodedir="$SRC/cache/sources/$FMUCODEDIR/${FMUCODEBRANCH##*:}"
	

	pushd $rcwdir > /dev/null
	make >> $DEST/debug/compilation.log 2>&1
	popd > /dev/null

	pushd $teedir > /dev/null
	display_alert "Building OP-TEE" "" "info"

	sed -i 's/from Crypto\./from Cryptodome\./g' scripts/*.py
	sed -i 's/\/usr\/bin\/env\ python$/\/usr\/bin\/env\ python3/g' scripts/*.py

	make CROSS_COMPILE="$CCACHE $toolchain/$ATF_COMPILER" CROSS_COMPILE64="$CCACHE $toolchain/$UBOOT_COMPILER" PLATFORM=ls-${OPTEE_PLATFORM} CFG_ARM64_core=y ARCH=arm
	"${toolchain}/${ATF_COMPILER}objcopy" -v -O binary out/arm-plat-ls/core/tee.elf out/arm-plat-ls/core/tee_${OPTEE_PLATFORM}.bin

	popd

	pushd $atfdir > /dev/null

	make distclean >> $DEST/debug/compilation.log 2>&1

	display_alert "Building TF-A" "" "info"
	
	make CROSS_COMPILE="$CCACHE $toolchain/$ATF_COMPILER" PLAT=ls1046trustboxxl all fip pbl BOOT_MODE=sd RCW="$rcwdir/$RCWPATH" SPD=opteed BL32="$teedir/out/arm-plat-ls/core/tee_${OPTEE_PLATFORM}.bin" BL33="$ubootdir/u-boot.bin" # >> $DEST/debug/compilation.log 2>&1
	cp build/ls1046trustboxxl/release/{bl2_sd.pbl,fip.bin} $ubootdir/

	popd > /dev/null

	dd if=bl2_sd.pbl of="flash-image.bin" bs=512
	dd if=fip.bin of="flash-image.bin" bs=512 seek=2040
	dd if=$fmucodedir/$FMAN_UCODE of="flash-image.bin" bs=512 seek=18424
}

sign_cst_sbc() {
	local sbc=$1
	local input=$2
	local temp=$(mktemp)
	
	cat "${SRC}/packages/bsp/trustbox/${input}" | \
		sed -e "s|PRI_KEY=|PRI_KEY=${SRC}/userpatches/keys/|g" -e "s|PUB_KEY=|PUB_KEY=${SRC}/userpatches/keys/|g" \
			> ${temp}

	/usr/local/bin/cst/create_hdr_${sbc} "${temp}" >> "${DEST}"/debug/signing.log 2>&1
	
	rm ${temp}
}

family_tweaks() {
	chroot ${SDCARD} /bin/bash -c 'curl https://packages.microsoft.com/config/ubuntu/18.04/multiarch/prod.list > /etc/apt/sources.list.d/microsoft-prod.list'
	chroot ${SDCARD} /bin/bash -c 'curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg'

	chroot "${SDCARD}" /bin/bash -c "apt-get update" >> "${DEST}"/debug/install.log 2>&1

	# need to install seperately: iotedge preinst checks moby-engine exist
	NO_APT_CACHER=yes install_deb_chroot "moby-cli" "remote" "no"
	NO_APT_CACHER=yes install_deb_chroot "moby-engine" "remote" "no"
	NO_APT_CACHER=yes install_deb_chroot "aziot-edge" "remote" "no"


	chroot "${SDCARD}" /bin/bash -c 'adduser --quiet --disabled-password --home /home/admin --gecos admin admin'
	chroot "${SDCARD}" /bin/bash -c '(echo trust;echo trust) | passwd admin >/dev/null 2>&1'

	for additionalgroup in sudo netdev audio video disk tty users games dialout plugdev input bluetooth systemd-journal ssh; do
		chroot "${SDCARD}" /bin/bash -c "usermod -aG ${additionalgroup} admin" 2>/dev/null
	done
}

family_tweaks_post_debootstrap () {
	if [[ $SECUREBOOT == yes && $BOARD == trustbox ]]; then
		display_alert "Signing images for secure boot" "" "info"
	
		if [[ ! -f "${SRC}/userpatches/keys/srk.pri" ]]; then
			display_alert "Keys not found, generating" "" "info"
			mkdir -p "${SRC}/userpatches/keys"
			pushd "${SRC}/userpatches/keys" > /dev/null
			/usr/local/bin/cst/gen_keys 1024
			popd > /dev/null
		fi

		pushd "${SDCARD}" > /dev/null
	
		mv "${SDCARD}/usr/lib/${CHOSEN_UBOOT}_${REVISION}_${ARCH}/u-boot-dtb.bin" "${SDCARD}/u-boot-dtb.bin"
		mv "${SDCARD}/usr/lib/${CHOSEN_UBOOT}_${REVISION}_${ARCH}/u-boot-spl.bin" "${SDCARD}/u-boot-spl.bin"

		sign_cst_sbc isbc input_spl_secure
		sign_cst_sbc esbc input_uboot_secure
		sign_cst_sbc esbc input_ppa_secure
		sign_cst_sbc esbc input_pfe_secure

		rm "${SDCARD}"/u-boot-{spl,dtb}.bin

		pushd "${SDCARD}/boot" > /dev/null
		
		sign_cst_sbc esbc input_kernel_secure
		sign_cst_sbc esbc input_dtb_secure
		sign_cst_sbc esbc input_scr_secure

		popd > /dev/null
		popd > /dev/null
	fi
	
	ln -s "/usr/lib/${CHOSEN_UBOOT}_${REVISION}_${ARCH}/u-boot-with-spl-pbl.bin" ${SDCARD}/u-boot-with-pbl.bin


	rm -f "${SDCARD}/root/.not_logged_in_yet"
	chroot "${SDCARD}" usermod -L root

	rm -f "${SDCARD}/etc/systemd/system/getty@.service.d/override.conf"
	rm -f "${SDCARD}/etc/systemd/system/serial-getty@.service.d/override.conf"
}

family_tweaks_bsp() {
	true
}
